// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrganizationDevicesAvailabilitiesChangeHistoryParams creates a new GetOrganizationDevicesAvailabilitiesChangeHistoryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationDevicesAvailabilitiesChangeHistoryParams() *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	return &GetOrganizationDevicesAvailabilitiesChangeHistoryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationDevicesAvailabilitiesChangeHistoryParamsWithTimeout creates a new GetOrganizationDevicesAvailabilitiesChangeHistoryParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationDevicesAvailabilitiesChangeHistoryParamsWithTimeout(timeout time.Duration) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	return &GetOrganizationDevicesAvailabilitiesChangeHistoryParams{
		timeout: timeout,
	}
}

// NewGetOrganizationDevicesAvailabilitiesChangeHistoryParamsWithContext creates a new GetOrganizationDevicesAvailabilitiesChangeHistoryParams object
// with the ability to set a context for a request.
func NewGetOrganizationDevicesAvailabilitiesChangeHistoryParamsWithContext(ctx context.Context) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	return &GetOrganizationDevicesAvailabilitiesChangeHistoryParams{
		Context: ctx,
	}
}

// NewGetOrganizationDevicesAvailabilitiesChangeHistoryParamsWithHTTPClient creates a new GetOrganizationDevicesAvailabilitiesChangeHistoryParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationDevicesAvailabilitiesChangeHistoryParamsWithHTTPClient(client *http.Client) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	return &GetOrganizationDevicesAvailabilitiesChangeHistoryParams{
		HTTPClient: client,
	}
}

/*
GetOrganizationDevicesAvailabilitiesChangeHistoryParams contains all the parameters to send to the API endpoint

	for the get organization devices availabilities change history operation.

	Typically these are written to a http.Request.
*/
type GetOrganizationDevicesAvailabilitiesChangeHistoryParams struct {

	/* EndingBefore.

	   A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	*/
	EndingBefore *string

	/* NetworkIds.

	   Optional parameter to filter device availabilities history by network IDs
	*/
	NetworkIds []string

	/* OrganizationID.

	   Organization ID
	*/
	OrganizationID string

	/* PerPage.

	   The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
	*/
	PerPage *int64

	/* ProductTypes.

	   Optional parameter to filter device availabilities history by device product types
	*/
	ProductTypes []string

	/* Serials.

	   Optional parameter to filter device availabilities history by device serial numbers
	*/
	Serials []string

	/* StartingAfter.

	   A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	*/
	StartingAfter *string

	/* Statuses.

	   Optional parameter to filter device availabilities history by device statuses
	*/
	Statuses []string

	/* T0.

	   The beginning of the timespan for the data. The maximum lookback period is 14 days from today.
	*/
	T0 *string

	/* T1.

	   The end of the timespan for the data. t1 can be a maximum of 14 days after t0.
	*/
	T1 *string

	/* Timespan.

	   The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 days. The default is 1 day.

	   Format: float
	*/
	Timespan *float32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organization devices availabilities change history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithDefaults() *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organization devices availabilities change history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithTimeout(timeout time.Duration) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithContext(ctx context.Context) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithHTTPClient(client *http.Client) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndingBefore adds the endingBefore to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithEndingBefore(endingBefore *string) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetEndingBefore(endingBefore)
	return o
}

// SetEndingBefore adds the endingBefore to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetEndingBefore(endingBefore *string) {
	o.EndingBefore = endingBefore
}

// WithNetworkIds adds the networkIds to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithNetworkIds(networkIds []string) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetNetworkIds(networkIds)
	return o
}

// SetNetworkIds adds the networkIds to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetNetworkIds(networkIds []string) {
	o.NetworkIds = networkIds
}

// WithOrganizationID adds the organizationID to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithOrganizationID(organizationID string) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WithPerPage adds the perPage to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithPerPage(perPage *int64) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetPerPage(perPage *int64) {
	o.PerPage = perPage
}

// WithProductTypes adds the productTypes to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithProductTypes(productTypes []string) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetProductTypes(productTypes)
	return o
}

// SetProductTypes adds the productTypes to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetProductTypes(productTypes []string) {
	o.ProductTypes = productTypes
}

// WithSerials adds the serials to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithSerials(serials []string) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetSerials(serials)
	return o
}

// SetSerials adds the serials to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetSerials(serials []string) {
	o.Serials = serials
}

// WithStartingAfter adds the startingAfter to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithStartingAfter(startingAfter *string) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetStartingAfter(startingAfter)
	return o
}

// SetStartingAfter adds the startingAfter to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetStartingAfter(startingAfter *string) {
	o.StartingAfter = startingAfter
}

// WithStatuses adds the statuses to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithStatuses(statuses []string) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetStatuses(statuses)
	return o
}

// SetStatuses adds the statuses to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetStatuses(statuses []string) {
	o.Statuses = statuses
}

// WithT0 adds the t0 to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithT0(t0 *string) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetT0(t0)
	return o
}

// SetT0 adds the t0 to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetT0(t0 *string) {
	o.T0 = t0
}

// WithT1 adds the t1 to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithT1(t1 *string) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetT1(t1)
	return o
}

// SetT1 adds the t1 to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetT1(t1 *string) {
	o.T1 = t1
}

// WithTimespan adds the timespan to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WithTimespan(timespan *float32) *GetOrganizationDevicesAvailabilitiesChangeHistoryParams {
	o.SetTimespan(timespan)
	return o
}

// SetTimespan adds the timespan to the get organization devices availabilities change history params
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) SetTimespan(timespan *float32) {
	o.Timespan = timespan
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EndingBefore != nil {

		// query param endingBefore
		var qrEndingBefore string

		if o.EndingBefore != nil {
			qrEndingBefore = *o.EndingBefore
		}
		qEndingBefore := qrEndingBefore
		if qEndingBefore != "" {

			if err := r.SetQueryParam("endingBefore", qEndingBefore); err != nil {
				return err
			}
		}
	}

	if o.NetworkIds != nil {

		// binding items for networkIds
		joinedNetworkIds := o.bindParamNetworkIds(reg)

		// query array param networkIds
		if err := r.SetQueryParam("networkIds", joinedNetworkIds...); err != nil {
			return err
		}
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if o.PerPage != nil {

		// query param perPage
		var qrPerPage int64

		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatInt64(qrPerPage)
		if qPerPage != "" {

			if err := r.SetQueryParam("perPage", qPerPage); err != nil {
				return err
			}
		}
	}

	if o.ProductTypes != nil {

		// binding items for productTypes
		joinedProductTypes := o.bindParamProductTypes(reg)

		// query array param productTypes
		if err := r.SetQueryParam("productTypes", joinedProductTypes...); err != nil {
			return err
		}
	}

	if o.Serials != nil {

		// binding items for serials
		joinedSerials := o.bindParamSerials(reg)

		// query array param serials
		if err := r.SetQueryParam("serials", joinedSerials...); err != nil {
			return err
		}
	}

	if o.StartingAfter != nil {

		// query param startingAfter
		var qrStartingAfter string

		if o.StartingAfter != nil {
			qrStartingAfter = *o.StartingAfter
		}
		qStartingAfter := qrStartingAfter
		if qStartingAfter != "" {

			if err := r.SetQueryParam("startingAfter", qStartingAfter); err != nil {
				return err
			}
		}
	}

	if o.Statuses != nil {

		// binding items for statuses
		joinedStatuses := o.bindParamStatuses(reg)

		// query array param statuses
		if err := r.SetQueryParam("statuses", joinedStatuses...); err != nil {
			return err
		}
	}

	if o.T0 != nil {

		// query param t0
		var qrT0 string

		if o.T0 != nil {
			qrT0 = *o.T0
		}
		qT0 := qrT0
		if qT0 != "" {

			if err := r.SetQueryParam("t0", qT0); err != nil {
				return err
			}
		}
	}

	if o.T1 != nil {

		// query param t1
		var qrT1 string

		if o.T1 != nil {
			qrT1 = *o.T1
		}
		qT1 := qrT1
		if qT1 != "" {

			if err := r.SetQueryParam("t1", qT1); err != nil {
				return err
			}
		}
	}

	if o.Timespan != nil {

		// query param timespan
		var qrTimespan float32

		if o.Timespan != nil {
			qrTimespan = *o.Timespan
		}
		qTimespan := swag.FormatFloat32(qrTimespan)
		if qTimespan != "" {

			if err := r.SetQueryParam("timespan", qTimespan); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetOrganizationDevicesAvailabilitiesChangeHistory binds the parameter networkIds
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) bindParamNetworkIds(formats strfmt.Registry) []string {
	networkIdsIR := o.NetworkIds

	var networkIdsIC []string
	for _, networkIdsIIR := range networkIdsIR { // explode []string

		networkIdsIIV := networkIdsIIR // string as string
		networkIdsIC = append(networkIdsIC, networkIdsIIV)
	}

	// items.CollectionFormat: ""
	networkIdsIS := swag.JoinByFormat(networkIdsIC, "")

	return networkIdsIS
}

// bindParamGetOrganizationDevicesAvailabilitiesChangeHistory binds the parameter productTypes
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) bindParamProductTypes(formats strfmt.Registry) []string {
	productTypesIR := o.ProductTypes

	var productTypesIC []string
	for _, productTypesIIR := range productTypesIR { // explode []string

		productTypesIIV := productTypesIIR // string as string
		productTypesIC = append(productTypesIC, productTypesIIV)
	}

	// items.CollectionFormat: ""
	productTypesIS := swag.JoinByFormat(productTypesIC, "")

	return productTypesIS
}

// bindParamGetOrganizationDevicesAvailabilitiesChangeHistory binds the parameter serials
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) bindParamSerials(formats strfmt.Registry) []string {
	serialsIR := o.Serials

	var serialsIC []string
	for _, serialsIIR := range serialsIR { // explode []string

		serialsIIV := serialsIIR // string as string
		serialsIC = append(serialsIC, serialsIIV)
	}

	// items.CollectionFormat: ""
	serialsIS := swag.JoinByFormat(serialsIC, "")

	return serialsIS
}

// bindParamGetOrganizationDevicesAvailabilitiesChangeHistory binds the parameter statuses
func (o *GetOrganizationDevicesAvailabilitiesChangeHistoryParams) bindParamStatuses(formats strfmt.Registry) []string {
	statusesIR := o.Statuses

	var statusesIC []string
	for _, statusesIIR := range statusesIR { // explode []string

		statusesIIV := statusesIIR // string as string
		statusesIC = append(statusesIC, statusesIIV)
	}

	// items.CollectionFormat: ""
	statusesIS := swag.JoinByFormat(statusesIC, "")

	return statusesIS
}
